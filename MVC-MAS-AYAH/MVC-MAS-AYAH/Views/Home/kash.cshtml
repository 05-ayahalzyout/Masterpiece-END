
@{
    ViewBag.Title = "kash";
}


@{
    ViewBag.Title = "الدفع";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.all.min.js"></script>


<body style="background: rgb(42,32,37); background: linear-gradient(209deg, rgba(42,32,37,0.912570130591299) 18%, rgba(15,55,94,0.3501050078234419) 100%); ">

    <br />
    <br />
    <br />
    <br />
    <br />
    <script src="~/Views/Master/pay2.js"></script>
    <link href="~/assets/css/Stylekash.css" rel="stylesheet" />

    @if (TempData["pay"] != null)
    {

        <div class="alert alert-success">
            <strong>Success</strong> @TempData["pay"] , your Balance is @TempData["balance"]
        </div>
    }


    @if (TempData["payNotEnough"] != null)
    {

        <div class="alert alert-warning">
            <strong>Warning</strong> @TempData["payNotEnough"]
        </div>
    }
    @using (Html.BeginForm("pay2", "Master", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div class="wrapper" id="app">
            <div class="card-form">
                <div class="card-list">
                    <div class="card-item" v-bind:class="{ '-active' : isCardFlipped }">
                        <div class="card-item__side -front">
                            <div class="card-item__focus" v-bind:class="{'-active' : focusElementStyle }" v-bind:style="focusElementStyle" ref="focusElement"></div>
                            <div class="card-item__cover">
                                <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + currentCardBackground + '.jpeg'" class="card-item__bg">
                            </div>

                            <div class="card-item__wrapper">
                                <div class="card-item__top">
                                    <img src="https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/chip.png" class="card-item__chip">
                                    <div class="card-item__type">
                                        <transition name="slide-fade-up">
                                            <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + getCardType + '.png'" v-if="getCardType" v-bind:key="getCardType" alt="" class="card-item__typeImg">
                                        </transition>
                                    </div>
                                </div>
                                <label for="cardNumber" class="card-item__number" ref="cardNumber">
                                    <template v-if="getCardType === 'amex'">
                                        <span v-for="(n, $index) in amexCardMask" :key="$index">
                                            <transition name="slide-fade-up">
                                                <div class="card-item__numberItem"
                                                     v-if="$index > 4 && $index < 14 && cardNumber.length > $index && n.trim() !== ''">*</div>
                                                <div class="card-item__numberItem"
                                                     :class="{ '-active' : n.trim() === '' }"
                                                     :key="$index" v-else-if="cardNumber.length > $index">
                                                    {{cardNumber[$index]}}
                                                </div>
                                                <div class="card-item__numberItem"
                                                     :class="{ '-active' : n.trim() === '' }"
                                                     v-else
                                                     :key="$index + 1">{{n}}</div>
                                            </transition>
                                        </span>
                                    </template>

                                    <template v-else>
                                        <span v-for="(n, $index) in otherCardMask" :key="$index">
                                            <transition name="slide-fade-up">
                                                <div class="card-item__numberItem"
                                                     v-if="$index > 4 && $index < 15 && cardNumber.length > $index && n.trim() !== ''">*</div>
                                                <div class="card-item__numberItem"
                                                     :class="{ '-active' : n.trim() === '' }"
                                                     :key="$index" v-else-if="cardNumber.length > $index">
                                                    {{cardNumber[$index]}}
                                                </div>
                                                <div class="card-item__numberItem"
                                                     :class="{ '-active' : n.trim() === '' }"
                                                     v-else
                                                     :key="$index + 1">{{n}}</div>
                                            </transition>
                                        </span>
                                    </template>
                                </label>
                                <div class="card-item__content">
                                    <label for="cardName" class="card-item__info" ref="cardName">
                                        <div class="card-item__holder">Card Holder</div>
                                        <transition name="slide-fade-up">
                                            <div class="card-item__name" v-if="cardName.length" key="1">
                                                <transition-group name="slide-fade-right">
                                                    <span class="card-item__nameItem" v-for="(n, $index) in cardName.replace(/\s\s+/g, ' ')" v-if="$index === $index" v-bind:key="$index + 1">{{n}}</span>
                                                </transition-group>
                                            </div>
                                            <div class="card-item__name" v-else key="2">Full Name</div>
                                        </transition>
                                    </label>
                                    <div class="card-item__date" ref="cardDate">
                                        <label for="cardMonth" class="card-item__dateTitle">Expires</label>
                                        <label for="cardMonth" class="card-item__dateItem">
                                            <transition name="slide-fade-up">
                                                <span v-if="cardMonth" v-bind:key="cardMonth">{{cardMonth}}</span>
                                                <span v-else key="2">MM</span>
                                            </transition>
                                        </label>

                                        <label for="cardYear" class="card-item__dateItem">
                                            <transition name="slide-fade-up">
                                                <span v-if="cardYear" v-bind:key="cardYear">{{String(cardYear).slice(2,4)}}</span>
                                                <span v-else key="2">YY</span>
                                            </transition>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-item__side -back">
                            <div class="card-item__cover">
                                <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + currentCardBackground + '.jpeg'" class="card-item__bg">
                            </div>
                            <div class="card-item__band"></div>
                            <div class="card-item__cvv">
                                <div class="card-item__cvvTitle">CVV</div>
                                <div class="card-item__cvvBand">
                                    <span v-for="(n, $index) in cardCvv" :key="$index">
                                        *
                                    </span>

                                </div>
                                <div class="card-item__type">
                                    <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + getCardType + '.png'" v-if="getCardType" class="card-item__typeImg">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-form__inner">
                    <div class="card-input">
                        <label for="cardNumber" class="card-input__label" style="direction: rtl">رقم البطاقة</label>
                        <input required type="text" required minlength="12" length="12" id="cardNumber" class="card-input__input" v-mask="generateCardNumberMask" v-model="cardNumber" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardNumber" autocomplete="off">
                    </div>
                    <div class="card-input">
                        <label for="cardName" class="card-input__label" style="direction: rtl">حاملي البطاقات </label>
                        <input required type="text" id="cardName" class="card-input__input" v-model="cardName" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardName" autocomplete="off">
                    </div>
                    <div class="card-form__row">
                        <div class="card-form__col">
                            <div class="card-form__group">
                                <label for="cardMonth" class="card-input__label" style="direction: rtl">تاريخ انتهاء الصلاحية</label>
                                <select class="card-input__input -select" id="cardMonth" v-model="cardMonth" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardDate">
                                    <option value="" disabled selected style="direction: rtl">شهر</option>
                                    <option v-bind:value="n < 10 ? '0' + n : n" v-for="n in 12" v-bind:disabled="n < minCardMonth" v-bind:key="n">
                                        {{n < 10 ? '0' + n : n}}
                                    </option>
                                </select>
                                <select class="card-input__input -select" id="cardYear" v-model="cardYear" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardDate">
                                    <option value="" disabled selected style="direction: rtl">سنة</option>
                                    <option v-bind:value="$index + minCardYear" v-for="(n, $index) in 12" v-bind:key="n">
                                        {{$index + minCardYear}}
                                    </option>
                                </select>
                            </div>
                        </div>
                        <div class="card-form__col -cvv">
                            <div class="card-input">
                                <label for="cardCvv" class="card-input__label" style="text-align:center">CVV</label>
                                <input required type="text" class="card-input__input" id="cardCvv" v-mask="'####'" maxlength="4" v-model="cardCvv" v-on:focus="flipCard(true)" v-on:blur="flipCard(false)" autocomplete="off">
                            </div>
                        </div>
                        <div class="card-input">
                            <label for="cardNumber" class="card-input__label" style="direction: rtl">المبلغ</label>
                            <input required type="text" name="Money_Payment" class="card-input__input" v v-on:focus="focusInput" v-on:blur="blurInput" autocomplete="off">
                        </div>
                    </div>

                    <button class="card-form__button"
                            style="color: #fff;font-family:Caveat Regular;padding: 15px 25px;background-color:rgb(42,32,37);
          background-image: radial-gradient(93% 87% at 87% 89%, rgba(0, 0, 0, 0.23) 0%, transparent 86.18%), radial-gradient(66% 66% at 26% 20%, rgba(255, 255, 255, 0.55) 0%, rgba(255, 255, 255, 0) 69.79%, rgba(255, 255, 255, 0) 100%);
          box-shadow: inset -3px -3px 9px rgba(255, 255, 255, 0.25), inset 0px 3px 9px rgba(255, 255, 255, 0.3), inset 0px 1px 1px rgba(255, 255, 255, 0.6), inset 0px -8px 36px rgba(0, 0, 0, 0.3), inset 0px 1px 5px rgba(255, 255, 255, 0.6), 2px 19px 31px rgba(0, 0, 0, 0.2);
          border-radius: 14px;font-weight: bold;border: 0;user-select: none;-webkit-user-select: none;touch-action: manipulation;cursor: pointer;" onclick="event.preventDefault();
                            Swal.fire({
                            title: 'شكرا لك' ,
                            text: 'تم الاشتراك والدفع بنجاح' ,
                            icon: 'success' ,
                            confirmButtonColor: '#0A4438' ,
                            confirmButtonText: 'الرئيسيه' ,
                            }).then((result)=>
                        {
                        if (result.isConfirmed) {
                        window.location.href = '/Home/PaySubscription';
                        }
                        });">
                        اشترك
                    </button>

                </div>
            </div>


        </div>
        <!-- partial -->
        <script src='https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js'></script>
        <script src='https://unpkg.com/vue-the-mask@0.11.1/dist/vue-the-mask.js'></script>
        <script src="./script.js"></script>
        <script src="~/pay2.js"></script>
        <script src="~/Views/Students/pay2.js"></script>
        <script>
            /*
                            See on github: https://github.com/muhammederdem/credit-card-form
                            */

            new Vue({
                el: "#app",
                data() {
                    return {
                        currentCardBackground: Math.floor(Math.random() * 25 + 1), // just for fun :D
                        cardName: "",
                        cardNumber: "",
                        cardMonth: "",
                        cardYear: "",
                        cardCvv: "",
                        minCardYear: new Date().getFullYear(),
                        amexCardMask: "#### ###### #####",
                        otherCardMask: "#### #### #### ####",
                        cardNumberTemp: "",
                        isCardFlipped: false,
                        focusElementStyle: null,
                        isInputFocused: false
                    };
                },
                mounted() {
                    this.cardNumberTemp = this.otherCardMask;
                    document.getElementById("cardNumber").focus();
                },
                computed: {
                    getCardType() {
                        let number = this.cardNumber;
                        let re = new RegExp("^4");
                        if (number.match(re) != null) return "visa";

                        re = new RegExp("^(34|37)");
                        if (number.match(re) != null) return "amex";

                        re = new RegExp("^5[1-5]");
                        if (number.match(re) != null) return "mastercard";

                        re = new RegExp("^6011");
                        if (number.match(re) != null) return "discover";

                        re = new RegExp('^9792')
                        if (number.match(re) != null) return 'troy'

                        return "visa"; // default type
                    },
                    generateCardNumberMask() {
                        return this.getCardType === "amex" ? this.amexCardMask : this.otherCardMask;
                    },
                    minCardMonth() {
                        if (this.cardYear === this.minCardYear) return new Date().getMonth() + 1;
                        return 1;
                    }
                },
                watch: {
                    cardYear() {
                        if (this.cardMonth < this.minCardMonth) {
                            this.cardMonth = "";
                        }
                    }
                },
                methods: {
                    flipCard(status) {
                        this.isCardFlipped = status;
                    },
                    focusInput(e) {
                        this.isInputFocused = true;
                        let targetRef = e.target.dataset.ref;
                        let target = this.$refs[targetRef];
                        this.focusElementStyle = {
                            width: `${target.offsetWidth}px`,
                            height: `${target.offsetHeight}px`,
                            transform: `translateX(${target.offsetLeft}px) translateY(${target.offsetTop}px)`
                        }
                    },
                    blurInput() {
                        let vm = this;
                        setTimeout(() => {
                            if (!vm.isInputFocused) {
                                vm.focusElementStyle = null;
                            }
                        }, 300);
                        vm.isInputFocused = false;
                    }
                }
            });</script>



    }
    }



    <label>
        @if (Session["id"] == null)
        {


            <label>null</label>
        }
        else
        {
            <label>Not null</label>
        }
    </label>
    <label>@Session["id"]</label>
</body>
